# Nome da Actions:  
name: Snake Game

# Controlador de tempo para a atualização periódica dos arquivos.
on:
  schedule:
    # Atualizar a cada 5 horas.
    - cron: "0 */5 * * *"


# Permite a execução na lista de Actions (utilizado para testes de build).
on:
  workflow_dispatch:
    actions:
      - name: Checkout
        uses: actions/checkout@v2
      - name: GitHub Pages
        uses: crazy-max/ghaction-github-pages@v2.1.3


# Regras
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Ação 1
        run: echo "Executando ação 1"
      - name: Ação 2
        run: echo "Executando ação 2"


  # Verifica el repositorio bajo $GITHUB_WORKSHOP para que tu trabajo pueda acceder a él
      - uses: actions/checkout@v2
      - uses: crazy-max/ghaction-github-pages@v2.1.3


    # Repositorio que será utilizado para gerar os arquivos.
      - uses: Platane/snk@master
      - uses: actions/checkout@v2
      - uses: crazy-max/ghaction-github-pages@v2.1.3

        id: snake-gif
        with:
          github_user_name: dev-miriambatista #Seu usuario
          gif_out_path: dist/github-contribution-grid-snake.gif
          svg_out_path: dist/github-contribution-grid-snake.svg

      - run: echo "::set-output name=MY_OUTPUT::some-value"
      - run: echo "MY_OUTPUT=some-value" >> $GITHUB_ENV



      # Para as atualizações.
      name: Push changes
      uses: ad-m/github-push-action@master
      with:
      github_token: ${{ secrets.GITHUB_TOKEN }}
      branch: main # Substitua "master" pelo nome da sua branch, se aplicável
      force: true

      - uses: crazy-max/ghaction-github-pages@v2.1.3
        with:
          # the output branch we mentioned above
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
